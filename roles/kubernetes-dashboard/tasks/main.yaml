---

- name: check kubectl
  become: yes
  command: kubectl get nodes
  register: getnodes
- debug: msg="{{getnodes.stdout_lines}}"

- debug: msg="{{TMPDIR}}"

- name: dashboard service account
  template:
    src: admin-user.yaml.j2
    dest: "{{TMPDIR}}/admin-user.yaml"
    mode: '0666'
- name: rbac for dashboard service account
  template:
    src: admin-user-rbac.yaml.j2
    dest: "{{TMPDIR}}/admin-user-rbac.yaml"
    mode: '0666'

- name: apply service account
  command: kubectl apply -f {{TMPDIR}}/admin-user.yaml
  become: yes
  register: stdout
- debug: msg="{{stdout.stdout_lines}}"

- name: apply service account rbac
  command: kubectl apply -f {{TMPDIR}}/admin-user-rbac.yaml
  become: yes
  register: stdout
- debug: msg="{{stdout.stdout_lines}}"

- copy:
    src: get-dashboard-token.sh
    dest: "{{TMPDIR}}/get-dashboard-token.sh"
    mode: '0775'
- name: get service account token
  shell: "{{TMPDIR}}/get-dashboard-token.sh > {{TMPDIR}}/k8s-token.txt"
  become: yes
  register: stdout
- debug: msg="{{stdout.stdout_lines}}"

- name: get k8s dashboard token from remote system
  slurp: src="{{TMPDIR}}/k8s-token.txt"
  register: dashboard_token
- debug: msg="{{dashboard_token.content}}"

- name: save dashboard token as fact
  set_fact:
    dashboard_token_fact: "{{ dashboard_token.content }}"

# going to use template to write instead (more flexible)
#- name: put dashboard token on calling system
#  delegate_to: localhost
#  shell: "echo {{dashboard_token_fact}} > /tmp/k8s-token.txt"

- name: create dashboard token from template on calling system
  delegate_to: localhost
  template:
    src: k8s-dashboard-token.txt.j2
    dest: "{{TMPDIR}}/k8s-dashboard-token.txt"
    mode: '0666'
- debug: 
    msg: "kubernetes dashboard token written to: {{TMPDIR}}/k8s-dashboard-token.txt"

