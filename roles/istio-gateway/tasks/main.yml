---

- name: check kubectl
  become: yes
  command: kubectl get nodes
  register: getnodes
- debug: msg="{{getnodes.stdout_lines}}"

- name: make sure cert pair exists
  stat:
    path: "{{item}}"
  register: cert_existence
  failed_when: not cert_existence.stat.exists
  loop:
    - "{{TMPDIR}}/{{primary_domain}}.crt"
    - "{{TMPDIR}}/{{primary_domain}}.key"

- name: create tls secret
  command: kubectl create -n istio-system secret tls tls-credential --key={{TMPDIR}}/{{primary_domain}}.key --cert={{TMPDIR}}/{{primary_domain}}.crt
  become: yes
  register: create_result
  failed_when: create_result.rc!=0 and not "AlreadyExists" in create_result.stderr
- debug: msg="{{create_result.stderr_lines}}"

- name: describe tls secret
  command: kubectl describe -n istio-system secret tls-credential
  become: yes
  register: stdout
- debug: msg="{{stdout.stdout_lines}}"

- name: apply helloworld v1 and v2 Deployment and Service
  shell: kubectl apply -f {{item}}
  become: yes
  register: stdout
  with_fileglob: "../files/hello*.yaml"
- debug: msg="{{stdout.results}}"

- name: create file out of every jinja2 templates
  template:
    src: "{{item}}"
    dest: /{{TMPDIR}}/{{ item | basename | regex_replace('\.j2$', '') }}
  with_fileglob: "../templates/*.j2"

#- meta:  end_play

- name: apply istio Gateway configs
  shell: kubectl apply -f /{{TMPDIR}}/{{ item | basename | regex_replace('\.j2$', '') }}
  become: yes
  register: stdout
  with_fileglob: "../templates/gateway*.j2"
- debug: msg="{{stdout.results}}"

- name: apply hello v1 and v2 VirtualService configs that project to Gateway
  shell: kubectl apply -f /{{TMPDIR}}/{{ item | basename | regex_replace('\.j2$', '') }}
  become: yes
  register: stdout
  with_fileglob: "../templates/hello*.j2"
- debug: msg="{{stdout.results}}"

- debug: msg="TODO test curl directly to pods IP:5000, then curl directly to service IP:5000"

