---

- name: check kubectl
  become: yes
  command: kubectl get nodes
  register: getnodes
- debug: msg="{{getnodes.stdout_lines}}"

- name: make sure cert pair exists
  stat:
    path: "{{item}}"
  register: cert_existence
  failed_when: not cert_existence.stat.exists
  loop:
    - "{{TMPDIR}}/{{primary_domain}}.crt"
    - "{{TMPDIR}}/{{primary_domain}}.key"

#- name: assert existence of cert pairs
#  debug:
#    msg: "{{item.item}} is {{item.stat.exists}}"
#  failed_when: not item.stat.exists
#  loop: "{{cert_existence.results}}"
#
#- meta: end_play

- name: create tls secret
  command: kubectl create -n istio-system secret tls tls-credential --key={{TMPDIR}}/{{primary_domain}}.key --cert={{TMPDIR}}/{{primary_domain}}.crt
  become: yes
  register: create_result
  failed_when: create_result.rc!=0 and not "AlreadyExists" in create_result.stderr
- debug: msg="{{create_result.stderr_lines}}"

- name: describe tls secret
  command: kubectl describe -n istio-system secret tls-credential
  become: yes
  register: stdout
- debug: msg="{{stdout.stdout_lines}}"

